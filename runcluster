#!/bin/bash

target=c11node10
postcopy=on
#postcopy=off

# boot up vm 
preptime=90

# sleep interval
sleeptime=5
ports=( 4446 4447 4448 4449 )
remain=${#ports[@]}

function startcluster() {
	# generate a random mac address for the qemu nic
	#mac=`printf 'DE:AD:BE:EF:%02X:%02X\n' $((RANDOM%256)) $((RANDOM%256))`

	# filename ram vcpu telnetport vncport listenport postcopy
	# master 10.244.36.132 (old 10.244.39.141)
	mac=DE:AD:BE:EF:0C:0F
	./runvm-daemon master.qcow2 1024 1 4446 1 $mac

	# slave1 10.244.37.1
	mac=DE:AD:BE:EF:FA:3A
	./runvm-daemon slave1.qcow2 1024 1 4447 2 $mac

	# slave2 10.244.38.71
	mac=DE:AD:BE:EF:FF:57
#	./runvm-daemon slave2.qcow2 1024 1 4448 3 $mac

	# slave3 10.244.38.70
	mac=DE:AD:BE:EF:A6:75
#	./runvm-daemon slave3.qcow2 1024 1 4449 4 $mac
}

function migrate() {
	#postcopy=off
	./ncmigrate master.qcow2 1024 1 4446 1 5446 off
	#postcopy=$1
	./ncmigrate slave1.qcow2 1024 1 4447 2 5447 $postcopy
	#postcopy=$1
	./ncmigrate slave2.qcow2 1024 1 4448 3 5448 $postcopy
	#postcopy=$1
	./ncmigrate slave3.qcow2 1024 1 4449 4 5449 $postcopy
}

function check() {
	#while [ $remain -gt 0 ]; 
	while [ 1 ]; 
	do
		remain=${#ports[@]}
		for port in ${ports[@]}; 
		do
			info=`./checkstatus localhost $port`
			if [[ -z $info ]]; then
				(( remain -- ))
				continue
			fi

			status=`echo "$info" | grep -a complete | awk '{print $3}'`
			#echo $status

			if [[ $status == *completed* ]]; then
				echo $port
				echo "$info"
				./stopvm localhost $port
				#./stopvm $target $port
				(( remain -- ))
				continue
			fi

		#	./checkstatus $target $port
		done

		echo remaining: $remain
		if [ $remain -le 0 ]; then
			break
		fi
		sleep $sleeptime
	done
}

function finish() {
	for port in ${ports[@]}; 
	do
		echo $port

		./stopvm localhost $port
#		./stopvm $target $port
	done
}

function migratecluster() {
#	startcluster
#	sleep $preptime
	migrate 
	check
}

migratecluster
#finish

