%!PS-Adobe-2.0 EPSF-2.0
%%Title: 8pms-detail.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Sep  7 00:48:06 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (8pms-detail.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep  7 00:48:06 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
833 511 M
-63 0 V
stroke
686 511 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
833 1138 M
-63 0 V
stroke
686 1138 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
833 1765 M
-63 0 V
stroke
686 1765 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
833 2392 M
-63 0 V
stroke
686 2392 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
833 3018 M
-63 0 V
stroke
686 3018 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
833 3645 M
-63 0 V
stroke
686 3645 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
833 4272 M
-63 0 V
stroke
686 4272 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
833 4899 M
-63 0 V
stroke
686 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
833 511 M
0 -63 V
0 4451 R
0 63 V
stroke
833 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
1713 511 M
0 -63 V
0 4451 R
0 63 V
stroke
1713 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2592 511 M
0 -63 V
0 4451 R
0 63 V
stroke
2592 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
3472 511 M
0 -63 V
0 4451 R
0 63 V
stroke
3472 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
4351 511 M
0 -63 V
0 4451 R
0 63 V
stroke
4351 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
5231 511 M
0 -63 V
0 4451 R
0 63 V
stroke
5231 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
6110 511 M
0 -63 V
0 4451 R
0 63 V
stroke
6110 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
0 4451 R
0 63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
LCb setrgbcolor
280 2705 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (number of evacuated VMs)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3911 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (time \(sec\))]
] -46.7 MCshow
LTb
3911 5172 M
[ [(Helvetica) 140.0 0.0 true true 0 (concurrency)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1757 4766 M
[ [(Helvetica) 140.0 0.0 true true 0 (controller)]
] -46.7 MRshow
LT0
1841 4766 M
399 0 V
1559 574 M
413 62 V
361 63 V
74 63 V
53 62 V
27 63 V
26 63 V
70 62 V
66 63 V
31 63 V
22 63 V
22 62 V
13 63 V
27 63 V
26 62 V
40 63 V
22 63 V
66 62 V
44 63 V
22 63 V
61 62 V
66 63 V
75 63 V
35 62 V
22 63 V
35 63 V
40 63 V
180 62 V
31 63 V
132 63 V
79 62 V
114 63 V
106 63 V
83 62 V
40 63 V
62 63 V
140 62 V
66 63 V
150 63 V
127 62 V
53 63 V
44 63 V
53 62 V
48 63 V
71 63 V
66 63 V
66 62 V
52 63 V
58 63 V
21 62 V
22 63 V
14 63 V
57 62 V
22 63 V
79 63 V
92 62 V
49 63 V
26 63 V
48 62 V
53 63 V
35 63 V
62 63 V
44 62 V
84 63 V
1559 574 Pls
1972 636 Pls
2333 699 Pls
2407 762 Pls
2460 824 Pls
2487 887 Pls
2513 950 Pls
2583 1012 Pls
2649 1075 Pls
2680 1138 Pls
2702 1201 Pls
2724 1263 Pls
2737 1326 Pls
2764 1389 Pls
2790 1451 Pls
2830 1514 Pls
2852 1577 Pls
2918 1639 Pls
2962 1702 Pls
2984 1765 Pls
3045 1827 Pls
3111 1890 Pls
3186 1953 Pls
3221 2015 Pls
3243 2078 Pls
3278 2141 Pls
3318 2204 Pls
3498 2266 Pls
3529 2329 Pls
3661 2392 Pls
3740 2454 Pls
3854 2517 Pls
3960 2580 Pls
4043 2642 Pls
4083 2705 Pls
4145 2768 Pls
4285 2830 Pls
4351 2893 Pls
4501 2956 Pls
4628 3018 Pls
4681 3081 Pls
4725 3144 Pls
4778 3206 Pls
4826 3269 Pls
4897 3332 Pls
4963 3395 Pls
5029 3457 Pls
5081 3520 Pls
5139 3583 Pls
5160 3645 Pls
5182 3708 Pls
5196 3771 Pls
5253 3833 Pls
5275 3896 Pls
5354 3959 Pls
5446 4021 Pls
5495 4084 Pls
5521 4147 Pls
5569 4209 Pls
5622 4272 Pls
5657 4335 Pls
5719 4398 Pls
5763 4460 Pls
5847 4523 Pls
2040 4766 Pls
1.000 UP
1.000 UL
LT1
LTb
1757 4626 M
[ [(Helvetica) 140.0 0.0 true true 0 (2VMs)]
] -46.7 MRshow
LT1
1841 4626 M
399 0 V
952 574 M
92 62 V
57 63 V
66 63 V
31 62 V
44 63 V
53 63 V
17 62 V
22 63 V
44 63 V
66 63 V
22 62 V
27 63 V
26 63 V
31 62 V
22 63 V
1156 63 V
36 62 V
39 63 V
49 63 V
30 62 V
75 63 V
5 63 V
26 62 V
13 63 V
40 63 V
22 63 V
13 62 V
22 63 V
13 63 V
31 62 V
31 63 V
1024 63 V
71 62 V
70 63 V
62 63 V
30 62 V
62 63 V
31 63 V
31 62 V
13 63 V
44 63 V
9 62 V
61 63 V
18 63 V
44 63 V
39 62 V
27 63 V
967 63 V
163 62 V
48 63 V
88 63 V
35 62 V
27 63 V
31 63 V
13 62 V
31 63 V
39 63 V
22 62 V
13 63 V
44 63 V
14 63 V
17 62 V
35 63 V
952 574 Crs
1044 636 Crs
1101 699 Crs
1167 762 Crs
1198 824 Crs
1242 887 Crs
1295 950 Crs
1312 1012 Crs
1334 1075 Crs
1378 1138 Crs
1444 1201 Crs
1466 1263 Crs
1493 1326 Crs
1519 1389 Crs
1550 1451 Crs
1572 1514 Crs
2728 1577 Crs
2764 1639 Crs
2803 1702 Crs
2852 1765 Crs
2882 1827 Crs
2957 1890 Crs
2962 1953 Crs
2988 2015 Crs
3001 2078 Crs
3041 2141 Crs
3063 2204 Crs
3076 2266 Crs
3098 2329 Crs
3111 2392 Crs
3142 2454 Crs
3173 2517 Crs
4197 2580 Crs
4268 2642 Crs
4338 2705 Crs
4400 2768 Crs
4430 2830 Crs
4492 2893 Crs
4523 2956 Crs
4554 3018 Crs
4567 3081 Crs
4611 3144 Crs
4620 3206 Crs
4681 3269 Crs
4699 3332 Crs
4743 3395 Crs
4782 3457 Crs
4809 3520 Crs
5776 3583 Crs
5939 3645 Crs
5987 3708 Crs
6075 3771 Crs
6110 3833 Crs
6137 3896 Crs
6168 3959 Crs
6181 4021 Crs
6212 4084 Crs
6251 4147 Crs
6273 4209 Crs
6286 4272 Crs
6330 4335 Crs
6344 4398 Crs
6361 4460 Crs
6396 4523 Crs
2040 4626 Crs
1.000 UP
1.000 UL
LT2
LTb
1757 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (4VMs)]
] -46.7 MRshow
LT2
1841 4486 M
399 0 V
2104 574 M
101 62 V
35 63 V
57 63 V
27 62 V
53 63 V
26 63 V
44 62 V
35 63 V
40 63 V
31 63 V
8 62 V
31 63 V
13 63 V
14 62 V
13 63 V
13 63 V
13 62 V
13 63 V
9 63 V
35 62 V
5 63 V
26 63 V
0 62 V
13 63 V
5 63 V
8 63 V
9 62 V
13 63 V
9 63 V
18 62 V
31 63 V
2172 63 V
66 62 V
66 63 V
48 63 V
53 62 V
49 63 V
13 63 V
22 62 V
48 63 V
5 63 V
17 62 V
9 63 V
18 63 V
4 63 V
31 62 V
13 63 V
18 63 V
13 62 V
22 63 V
17 63 V
18 62 V
17 63 V
14 63 V
13 62 V
9 63 V
17 63 V
27 62 V
22 63 V
13 63 V
4 63 V
18 62 V
31 63 V
2104 574 Star
2205 636 Star
2240 699 Star
2297 762 Star
2324 824 Star
2377 887 Star
2403 950 Star
2447 1012 Star
2482 1075 Star
2522 1138 Star
2553 1201 Star
2561 1263 Star
2592 1326 Star
2605 1389 Star
2619 1451 Star
2632 1514 Star
2645 1577 Star
2658 1639 Star
2671 1702 Star
2680 1765 Star
2715 1827 Star
2720 1890 Star
2746 1953 Star
2746 2015 Star
2759 2078 Star
2764 2141 Star
2772 2204 Star
2781 2266 Star
2794 2329 Star
2803 2392 Star
2821 2454 Star
2852 2517 Star
5024 2580 Star
5090 2642 Star
5156 2705 Star
5204 2768 Star
5257 2830 Star
5306 2893 Star
5319 2956 Star
5341 3018 Star
5389 3081 Star
5394 3144 Star
5411 3206 Star
5420 3269 Star
5438 3332 Star
5442 3395 Star
5473 3457 Star
5486 3520 Star
5504 3583 Star
5517 3645 Star
5539 3708 Star
5556 3771 Star
5574 3833 Star
5591 3896 Star
5605 3959 Star
5618 4021 Star
5627 4084 Star
5644 4147 Star
5671 4209 Star
5693 4272 Star
5706 4335 Star
5710 4398 Star
5728 4460 Star
5759 4523 Star
2040 4486 Star
1.000 UL
LT3
0.00 0.00 0.00 C LTb
1757 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (8VMs)]
] -46.7 MRshow
LT3
0.00 0.00 0.00 C 1841 4346 M
399 0 V
4153 574 M
124 62 V
61 63 V
79 63 V
31 62 V
9 63 V
97 63 V
35 62 V
325 63 V
62 63 V
39 63 V
40 62 V
40 63 V
30 63 V
22 62 V
5 63 V
8 63 V
14 62 V
22 63 V
17 63 V
22 62 V
27 63 V
4 63 V
22 62 V
4 63 V
9 63 V
5 63 V
8 62 V
9 63 V
13 63 V
5 62 V
17 63 V
14 63 V
4 62 V
9 63 V
4 63 V
9 62 V
0 63 V
13 63 V
5 62 V
8 63 V
5 63 V
0 62 V
4 63 V
9 63 V
9 63 V
4 62 V
9 63 V
0 63 V
9 62 V
4 63 V
9 63 V
9 62 V
4 63 V
5 63 V
4 62 V
4 63 V
9 63 V
5 62 V
0 63 V
8 63 V
14 63 V
30 62 V
22 63 V
stroke
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
