%!PS-Adobe-2.0 EPSF-2.0
%%Title: 1pm.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Sep  7 00:35:03 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (1pm.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Sep  7 00:35:03 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
833 511 M
-63 0 V
stroke
686 511 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
833 1138 M
-63 0 V
stroke
686 1138 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
833 1765 M
-63 0 V
stroke
686 1765 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
833 2392 M
-63 0 V
stroke
686 2392 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
833 3018 M
-63 0 V
stroke
686 3018 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
833 3645 M
-63 0 V
stroke
686 3645 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
833 4272 M
-63 0 V
stroke
686 4272 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
833 4899 M
-63 0 V
stroke
686 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
833 511 M
0 -63 V
0 4451 R
0 63 V
stroke
833 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1517 511 M
0 -63 V
0 4451 R
0 63 V
stroke
1517 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
2201 511 M
0 -63 V
0 4451 R
0 63 V
stroke
2201 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
2885 511 M
0 -63 V
0 4451 R
0 63 V
stroke
2885 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
3569 511 M
0 -63 V
0 4451 R
0 63 V
stroke
3569 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
4254 511 M
0 -63 V
0 4451 R
0 63 V
stroke
4254 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MCshow
1.000 UL
LTb
4938 511 M
0 -63 V
0 4451 R
0 63 V
stroke
4938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1200)]
] -46.7 MCshow
1.000 UL
LTb
5622 511 M
0 -63 V
0 4451 R
0 63 V
stroke
5622 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1400)]
] -46.7 MCshow
1.000 UL
LTb
6306 511 M
0 -63 V
0 4451 R
0 63 V
stroke
6306 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1600)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
0 4451 R
0 63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1800)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
LCb setrgbcolor
280 2705 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (number of evacuated VMs)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3911 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (time \(sec\))]
] -46.7 MCshow
LTb
3911 5172 M
[ [(Helvetica) 140.0 0.0 true true 0 (concurrency)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1757 4766 M
[ [(Helvetica) 140.0 0.0 true true 0 (controller)]
] -46.7 MRshow
LT0
1841 4766 M
399 0 V
973 574 M
28 62 V
6 63 V
27 63 V
27 62 V
41 63 V
8 63 V
19 62 V
146 63 V
14 63 V
19 63 V
36 62 V
28 63 V
22 63 V
27 62 V
17 63 V
148 63 V
11 62 V
17 63 V
26 63 V
22 62 V
24 63 V
20 63 V
24 62 V
171 63 V
15 63 V
33 63 V
10 62 V
15 63 V
28 63 V
27 62 V
20 63 V
119 63 V
33 62 V
4 63 V
39 63 V
37 62 V
26 63 V
14 63 V
8 62 V
143 63 V
28 63 V
7 62 V
28 63 V
22 63 V
7 63 V
30 62 V
20 63 V
118 63 V
27 62 V
28 63 V
22 63 V
30 62 V
13 63 V
20 63 V
21 62 V
144 63 V
13 63 V
26 62 V
28 63 V
14 63 V
32 63 V
33 62 V
14 63 V
973 574 Pls
1001 636 Pls
1007 699 Pls
1034 762 Pls
1061 824 Pls
1102 887 Pls
1110 950 Pls
1129 1012 Pls
1275 1075 Pls
1289 1138 Pls
1308 1201 Pls
1344 1263 Pls
1372 1326 Pls
1394 1389 Pls
1421 1451 Pls
1438 1514 Pls
1586 1577 Pls
1597 1639 Pls
1614 1702 Pls
1640 1765 Pls
1662 1827 Pls
1686 1890 Pls
1706 1953 Pls
1730 2015 Pls
1901 2078 Pls
1916 2141 Pls
1949 2204 Pls
1959 2266 Pls
1974 2329 Pls
2002 2392 Pls
2029 2454 Pls
2049 2517 Pls
2168 2580 Pls
2201 2642 Pls
2205 2705 Pls
2244 2768 Pls
2281 2830 Pls
2307 2893 Pls
2321 2956 Pls
2329 3018 Pls
2472 3081 Pls
2500 3144 Pls
2507 3206 Pls
2535 3269 Pls
2557 3332 Pls
2564 3395 Pls
2594 3457 Pls
2614 3520 Pls
2732 3583 Pls
2759 3645 Pls
2787 3708 Pls
2809 3771 Pls
2839 3833 Pls
2852 3896 Pls
2872 3959 Pls
2893 4021 Pls
3037 4084 Pls
3050 4147 Pls
3076 4209 Pls
3104 4272 Pls
3118 4335 Pls
3150 4398 Pls
3183 4460 Pls
3197 4523 Pls
2040 4766 Pls
1.000 UP
1.000 UL
LT1
LTb
1757 4626 M
[ [(Helvetica) 140.0 0.0 true true 0 (1VM)]
] -46.7 MRshow
LT1
1841 4626 M
399 0 V
931 574 M
88 62 V
78 63 V
88 63 V
87 62 V
89 63 V
83 63 V
87 62 V
106 63 V
87 63 V
82 63 V
84 62 V
85 63 V
89 63 V
88 62 V
89 63 V
98 63 V
90 62 V
84 63 V
84 63 V
81 62 V
90 63 V
81 63 V
88 62 V
95 63 V
89 63 V
82 63 V
82 62 V
82 63 V
84 63 V
86 62 V
86 63 V
97 63 V
91 62 V
81 63 V
81 63 V
84 62 V
89 63 V
84 63 V
81 62 V
94 63 V
83 63 V
85 62 V
85 63 V
81 63 V
88 63 V
83 62 V
84 63 V
96 63 V
88 62 V
85 63 V
83 63 V
81 62 V
83 63 V
82 63 V
85 62 V
92 63 V
83 63 V
84 62 V
90 63 V
81 63 V
82 63 V
88 62 V
84 63 V
931 574 Crs
1019 636 Crs
1097 699 Crs
1185 762 Crs
1272 824 Crs
1361 887 Crs
1444 950 Crs
1531 1012 Crs
1637 1075 Crs
1724 1138 Crs
1806 1201 Crs
1890 1263 Crs
1975 1326 Crs
2064 1389 Crs
2152 1451 Crs
2241 1514 Crs
2339 1577 Crs
2429 1639 Crs
2513 1702 Crs
2597 1765 Crs
2678 1827 Crs
2768 1890 Crs
2849 1953 Crs
2937 2015 Crs
3032 2078 Crs
3121 2141 Crs
3203 2204 Crs
3285 2266 Crs
3367 2329 Crs
3451 2392 Crs
3537 2454 Crs
3623 2517 Crs
3720 2580 Crs
3811 2642 Crs
3892 2705 Crs
3973 2768 Crs
4057 2830 Crs
4146 2893 Crs
4230 2956 Crs
4311 3018 Crs
4405 3081 Crs
4488 3144 Crs
4573 3206 Crs
4658 3269 Crs
4739 3332 Crs
4827 3395 Crs
4910 3457 Crs
4994 3520 Crs
5090 3583 Crs
5178 3645 Crs
5263 3708 Crs
5346 3771 Crs
5427 3833 Crs
5510 3896 Crs
5592 3959 Crs
5677 4021 Crs
5769 4084 Crs
5852 4147 Crs
5936 4209 Crs
6026 4272 Crs
6107 4335 Crs
6189 4398 Crs
6277 4460 Crs
6361 4523 Crs
2040 4626 Crs
1.000 UP
1.000 UL
LT2
LTb
1757 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (2VMs)]
] -46.7 MRshow
LT2
1841 4486 M
399 0 V
974 574 M
8 62 V
87 63 V
3 63 V
88 62 V
3 63 V
98 63 V
0 62 V
131 63 V
3 63 V
85 63 V
5 62 V
84 63 V
3 63 V
95 62 V
1 63 V
121 63 V
3 62 V
85 63 V
7 63 V
85 62 V
4 63 V
92 63 V
3 62 V
130 63 V
2 63 V
87 63 V
6 62 V
83 63 V
7 63 V
98 62 V
2 63 V
136 63 V
5 62 V
86 63 V
3 63 V
88 62 V
2 63 V
95 63 V
2 62 V
138 63 V
3 63 V
83 62 V
6 63 V
84 63 V
7 63 V
100 62 V
0 63 V
130 63 V
4 62 V
84 63 V
7 63 V
91 62 V
1 63 V
97 63 V
3 62 V
131 63 V
2 63 V
82 62 V
5 63 V
86 63 V
3 63 V
101 62 V
0 63 V
974 574 Star
982 636 Star
1069 699 Star
1072 762 Star
1160 824 Star
1163 887 Star
1261 950 Star
1261 1012 Star
1392 1075 Star
1395 1138 Star
1480 1201 Star
1485 1263 Star
1569 1326 Star
1572 1389 Star
1667 1451 Star
1668 1514 Star
1789 1577 Star
1792 1639 Star
1877 1702 Star
1884 1765 Star
1969 1827 Star
1973 1890 Star
2065 1953 Star
2068 2015 Star
2198 2078 Star
2200 2141 Star
2287 2204 Star
2293 2266 Star
2376 2329 Star
2383 2392 Star
2481 2454 Star
2483 2517 Star
2619 2580 Star
2624 2642 Star
2710 2705 Star
2713 2768 Star
2801 2830 Star
2803 2893 Star
2898 2956 Star
2900 3018 Star
3038 3081 Star
3041 3144 Star
3124 3206 Star
3130 3269 Star
3214 3332 Star
3221 3395 Star
3321 3457 Star
3321 3520 Star
3451 3583 Star
3455 3645 Star
3539 3708 Star
3546 3771 Star
3637 3833 Star
3638 3896 Star
3735 3959 Star
3738 4021 Star
3869 4084 Star
3871 4147 Star
3953 4209 Star
3958 4272 Star
4044 4335 Star
4047 4398 Star
4148 4460 Star
4148 4523 Star
2040 4486 Star
1.000 UP
1.000 UL
LT3
LTb
1757 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (4VMs)]
] -46.7 MRshow
LT3
1841 4346 M
399 0 V
967 574 M
3 62 V
39 63 V
3 63 V
130 62 V
3 63 V
1 63 V
1 62 V
133 63 V
5 63 V
35 63 V
2 62 V
130 63 V
4 63 V
0 62 V
0 63 V
135 63 V
6 62 V
27 63 V
4 63 V
129 62 V
2 63 V
0 63 V
0 62 V
140 63 V
4 63 V
20 63 V
3 62 V
130 63 V
4 63 V
1 62 V
1 63 V
131 63 V
3 62 V
35 63 V
2 63 V
132 62 V
2 63 V
1 63 V
1 62 V
134 63 V
8 63 V
31 62 V
4 63 V
127 63 V
6 63 V
1 62 V
1 63 V
134 63 V
5 62 V
22 63 V
5 63 V
122 62 V
8 63 V
2 63 V
0 62 V
129 63 V
4 63 V
41 62 V
2 63 V
125 63 V
4 63 V
2 62 V
0 63 V
967 574 Box
970 636 Box
1009 699 Box
1012 762 Box
1142 824 Box
1145 887 Box
1146 950 Box
1147 1012 Box
1280 1075 Box
1285 1138 Box
1320 1201 Box
1322 1263 Box
1452 1326 Box
1456 1389 Box
1456 1451 Box
1456 1514 Box
1591 1577 Box
1597 1639 Box
1624 1702 Box
1628 1765 Box
1757 1827 Box
1759 1890 Box
1759 1953 Box
1759 2015 Box
1899 2078 Box
1903 2141 Box
1923 2204 Box
1926 2266 Box
2056 2329 Box
2060 2392 Box
2061 2454 Box
2062 2517 Box
2193 2580 Box
2196 2642 Box
2231 2705 Box
2233 2768 Box
2365 2830 Box
2367 2893 Box
2368 2956 Box
2369 3018 Box
2503 3081 Box
2511 3144 Box
2542 3206 Box
2546 3269 Box
2673 3332 Box
2679 3395 Box
2680 3457 Box
2681 3520 Box
2815 3583 Box
2820 3645 Box
2842 3708 Box
2847 3771 Box
2969 3833 Box
2977 3896 Box
2979 3959 Box
2979 4021 Box
3108 4084 Box
3112 4147 Box
3153 4209 Box
3155 4272 Box
3280 4335 Box
3284 4398 Box
3286 4460 Box
3286 4523 Box
2040 4346 Box
1.000 UL
LT4
0.00 0.00 0.00 C LTb
1757 4206 M
[ [(Helvetica) 140.0 0.0 true true 0 (8VMs)]
] -46.7 MRshow
LT4
0.00 0.00 0.00 C 1841 4206 M
399 0 V
1009 574 M
14 62 V
6 63 V
6 63 V
79 62 V
22 63 V
11 63 V
1 62 V
182 63 V
13 63 V
3 63 V
9 62 V
67 63 V
16 63 V
7 62 V
1 63 V
167 63 V
3 62 V
18 63 V
5 63 V
67 62 V
18 63 V
15 63 V
0 62 V
177 63 V
14 63 V
7 63 V
14 62 V
57 63 V
26 63 V
6 62 V
3 63 V
174 63 V
12 62 V
5 63 V
9 63 V
85 62 V
14 63 V
2 63 V
2 62 V
164 63 V
6 63 V
8 62 V
7 63 V
83 63 V
26 63 V
1 62 V
0 63 V
179 63 V
11 62 V
10 63 V
9 63 V
83 62 V
8 63 V
8 63 V
0 62 V
203 63 V
8 63 V
7 62 V
4 63 V
66 63 V
29 63 V
8 62 V
3 63 V
stroke
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
