%!PS-Adobe-2.0 EPSF-2.0
%%Title: concur.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Aug 31 14:29:39 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (concur.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (root)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Aug 31 14:29:39 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
833 511 M
-63 0 V
stroke
686 511 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
833 1138 M
-63 0 V
stroke
686 1138 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
833 1765 M
-63 0 V
stroke
686 1765 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
833 2392 M
-63 0 V
stroke
686 2392 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
833 3018 M
-63 0 V
stroke
686 3018 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
833 3645 M
-63 0 V
stroke
686 3645 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MRshow
1.000 UL
LTb
833 4272 M
-63 0 V
stroke
686 4272 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
833 4899 M
-63 0 V
stroke
686 4899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 70)]
] -46.7 MRshow
1.000 UL
LTb
833 511 M
0 -63 V
0 4451 R
0 63 V
stroke
833 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1859 511 M
0 -63 V
0 4451 R
0 63 V
stroke
1859 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2885 511 M
0 -63 V
0 4451 R
0 63 V
stroke
2885 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
3912 511 M
0 -63 V
0 4451 R
0 63 V
stroke
3912 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
4938 511 M
0 -63 V
0 4451 R
0 63 V
stroke
4938 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
5964 511 M
0 -63 V
0 4451 R
0 63 V
stroke
5964 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
6990 511 M
0 -63 V
0 4451 R
0 63 V
stroke
6990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
LCb setrgbcolor
280 2705 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (number of evacuated VMs)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3911 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (time \(sec\))]
] -46.7 MCshow
LTb
3911 5172 M
[ [(Helvetica) 140.0 0.0 true true 0 (concurrency)]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
6339 1064 M
[ [(Helvetica) 140.0 0.0 true true 0 (1PM-8cVMs)]
] -46.7 MRshow
LT0
6423 1064 M
399 0 V
1231 574 M
12 62 V
24 63 V
25 63 V
198 62 V
51 63 V
26 63 V
7 62 V
329 63 V
33 63 V
28 63 V
16 62 V
179 63 V
72 63 V
59 62 V
0 63 V
331 63 V
33 62 V
29 63 V
28 63 V
105 62 V
131 63 V
28 63 V
0 62 V
354 63 V
16 63 V
23 63 V
74 62 V
121 63 V
61 63 V
57 62 V
2 63 V
400 63 V
47 62 V
20 63 V
31 63 V
169 62 V
75 63 V
7 63 V
3 62 V
474 63 V
21 63 V
23 62 V
23 63 V
95 63 V
113 63 V
10 62 V
5 63 V
362 63 V
33 62 V
21 63 V
23 63 V
180 62 V
112 63 V
6 63 V
7 62 V
418 63 V
16 63 V
15 62 V
54 63 V
149 63 V
59 63 V
18 62 V
2 63 V
1231 574 Pls
1243 636 Pls
1267 699 Pls
1292 762 Pls
1490 824 Pls
1541 887 Pls
1567 950 Pls
1574 1012 Pls
1903 1075 Pls
1936 1138 Pls
1964 1201 Pls
1980 1263 Pls
2159 1326 Pls
2231 1389 Pls
2290 1451 Pls
2290 1514 Pls
2621 1577 Pls
2654 1639 Pls
2683 1702 Pls
2711 1765 Pls
2816 1827 Pls
2947 1890 Pls
2975 1953 Pls
2975 2015 Pls
3329 2078 Pls
3345 2141 Pls
3368 2204 Pls
3442 2266 Pls
3563 2329 Pls
3624 2392 Pls
3681 2454 Pls
3683 2517 Pls
4083 2580 Pls
4130 2642 Pls
4150 2705 Pls
4181 2768 Pls
4350 2830 Pls
4425 2893 Pls
4432 2956 Pls
4435 3018 Pls
4909 3081 Pls
4930 3144 Pls
4953 3206 Pls
4976 3269 Pls
5071 3332 Pls
5184 3395 Pls
5194 3457 Pls
5199 3520 Pls
5561 3583 Pls
5594 3645 Pls
5615 3708 Pls
5638 3771 Pls
5818 3833 Pls
5930 3896 Pls
5936 3959 Pls
5943 4021 Pls
6361 4084 Pls
6377 4147 Pls
6392 4209 Pls
6446 4272 Pls
6595 4335 Pls
6654 4398 Pls
6672 4460 Pls
6674 4523 Pls
6622 1064 Pls
1.000 UP
1.000 UL
LT1
LTb
6339 924 M
[ [(Helvetica) 140.0 0.0 true true 0 (2cPMs-4cVMs)]
] -46.7 MRshow
LT1
6423 924 M
399 0 V
1208 574 M
35 62 V
21 63 V
23 63 V
39 62 V
10 63 V
28 63 V
3 62 V
408 63 V
20 63 V
0 63 V
0 62 V
59 63 V
18 63 V
3 62 V
2 63 V
339 63 V
38 62 V
52 63 V
5 63 V
41 62 V
18 63 V
64 63 V
8 62 V
415 63 V
26 63 V
10 63 V
3 62 V
5 63 V
15 63 V
8 62 V
5 63 V
387 63 V
11 62 V
25 63 V
26 63 V
38 62 V
16 63 V
28 63 V
8 62 V
454 63 V
2 63 V
3 62 V
5 63 V
31 63 V
5 63 V
3 62 V
5 63 V
392 63 V
8 62 V
28 63 V
10 63 V
52 62 V
15 63 V
26 63 V
13 62 V
433 63 V
15 63 V
13 62 V
0 63 V
8 63 V
15 63 V
3 62 V
0 63 V
1208 574 Crs
1243 636 Crs
1264 699 Crs
1287 762 Crs
1326 824 Crs
1336 887 Crs
1364 950 Crs
1367 1012 Crs
1775 1075 Crs
1795 1138 Crs
1795 1201 Crs
1795 1263 Crs
1854 1326 Crs
1872 1389 Crs
1875 1451 Crs
1877 1514 Crs
2216 1577 Crs
2254 1639 Crs
2306 1702 Crs
2311 1765 Crs
2352 1827 Crs
2370 1890 Crs
2434 1953 Crs
2442 2015 Crs
2857 2078 Crs
2883 2141 Crs
2893 2204 Crs
2896 2266 Crs
2901 2329 Crs
2916 2392 Crs
2924 2454 Crs
2929 2517 Crs
3316 2580 Crs
3327 2642 Crs
3352 2705 Crs
3378 2768 Crs
3416 2830 Crs
3432 2893 Crs
3460 2956 Crs
3468 3018 Crs
3922 3081 Crs
3924 3144 Crs
3927 3206 Crs
3932 3269 Crs
3963 3332 Crs
3968 3395 Crs
3971 3457 Crs
3976 3520 Crs
4368 3583 Crs
4376 3645 Crs
4404 3708 Crs
4414 3771 Crs
4466 3833 Crs
4481 3896 Crs
4507 3959 Crs
4520 4021 Crs
4953 4084 Crs
4968 4147 Crs
4981 4209 Crs
4981 4272 Crs
4989 4335 Crs
5004 4398 Crs
5007 4460 Crs
5007 4523 Crs
6622 924 Crs
1.000 UP
1.000 UL
LT2
LTb
6339 784 M
[ [(Helvetica) 140.0 0.0 true true 0 (4cPMs-2cVMs)]
] -46.7 MRshow
LT2
6423 784 M
399 0 V
1149 574 M
20 62 V
46 63 V
5 63 V
36 62 V
5 63 V
62 63 V
18 62 V
377 63 V
8 63 V
13 63 V
2 62 V
8 63 V
2 63 V
3 62 V
13 63 V
351 63 V
21 62 V
13 63 V
7 63 V
5 62 V
3 63 V
18 63 V
5 62 V
367 63 V
15 63 V
11 63 V
7 62 V
13 63 V
10 63 V
8 62 V
5 63 V
318 63 V
16 62 V
18 63 V
30 63 V
62 62 V
15 63 V
41 63 V
26 62 V
354 63 V
23 63 V
11 62 V
5 63 V
10 63 V
2 63 V
6 62 V
7 63 V
357 63 V
15 62 V
16 63 V
13 63 V
0 62 V
10 63 V
7 63 V
6 62 V
382 63 V
8 63 V
20 62 V
0 63 V
10 63 V
5 63 V
3 62 V
8 63 V
1149 574 Star
1169 636 Star
1215 699 Star
1220 762 Star
1256 824 Star
1261 887 Star
1323 950 Star
1341 1012 Star
1718 1075 Star
1726 1138 Star
1739 1201 Star
1741 1263 Star
1749 1326 Star
1751 1389 Star
1754 1451 Star
1767 1514 Star
2118 1577 Star
2139 1639 Star
2152 1702 Star
2159 1765 Star
2164 1827 Star
2167 1890 Star
2185 1953 Star
2190 2015 Star
2557 2078 Star
2572 2141 Star
2583 2204 Star
2590 2266 Star
2603 2329 Star
2613 2392 Star
2621 2454 Star
2626 2517 Star
2944 2580 Star
2960 2642 Star
2978 2705 Star
3008 2768 Star
3070 2830 Star
3085 2893 Star
3126 2956 Star
3152 3018 Star
3506 3081 Star
3529 3144 Star
3540 3206 Star
3545 3269 Star
3555 3332 Star
3557 3395 Star
3563 3457 Star
3570 3520 Star
3927 3583 Star
3942 3645 Star
3958 3708 Star
3971 3771 Star
3971 3833 Star
3981 3896 Star
3988 3959 Star
3994 4021 Star
4376 4084 Star
4384 4147 Star
4404 4209 Star
4404 4272 Star
4414 4335 Star
4419 4398 Star
4422 4460 Star
4430 4523 Star
6622 784 Star
1.000 UP
1.000 UL
LT3
LTb
6339 644 M
[ [(Helvetica) 140.0 0.0 true true 0 (8cPMs-1cVMs)]
] -46.7 MRshow
LT3
6423 644 M
399 0 V
1151 574 M
49 62 V
18 63 V
13 63 V
5 62 V
10 63 V
8 63 V
18 62 V
305 63 V
67 63 V
10 63 V
5 62 V
10 63 V
3 63 V
8 62 V
10 63 V
300 63 V
74 62 V
8 63 V
15 63 V
6 62 V
5 63 V
2 63 V
0 62 V
308 63 V
64 63 V
13 63 V
10 62 V
3 63 V
3 63 V
5 62 V
10 63 V
305 63 V
59 62 V
26 63 V
5 63 V
8 62 V
0 63 V
7 63 V
3 62 V
313 63 V
56 63 V
16 62 V
10 63 V
10 63 V
3 63 V
2 62 V
3 63 V
323 63 V
46 62 V
16 63 V
7 63 V
8 62 V
8 63 V
2 63 V
11 62 V
310 63 V
64 63 V
11 62 V
7 63 V
5 63 V
11 63 V
5 62 V
2 63 V
1151 574 Box
1200 636 Box
1218 699 Box
1231 762 Box
1236 824 Box
1246 887 Box
1254 950 Box
1272 1012 Box
1577 1075 Box
1644 1138 Box
1654 1201 Box
1659 1263 Box
1669 1326 Box
1672 1389 Box
1680 1451 Box
1690 1514 Box
1990 1577 Box
2064 1639 Box
2072 1702 Box
2087 1765 Box
2093 1827 Box
2098 1890 Box
2100 1953 Box
2100 2015 Box
2408 2078 Box
2472 2141 Box
2485 2204 Box
2495 2266 Box
2498 2329 Box
2501 2392 Box
2506 2454 Box
2516 2517 Box
2821 2580 Box
2880 2642 Box
2906 2705 Box
2911 2768 Box
2919 2830 Box
2919 2893 Box
2926 2956 Box
2929 3018 Box
3242 3081 Box
3298 3144 Box
3314 3206 Box
3324 3269 Box
3334 3332 Box
3337 3395 Box
3339 3457 Box
3342 3520 Box
3665 3583 Box
3711 3645 Box
3727 3708 Box
3734 3771 Box
3742 3833 Box
3750 3896 Box
3752 3959 Box
3763 4021 Box
4073 4084 Box
4137 4147 Box
4148 4209 Box
4155 4272 Box
4160 4335 Box
4171 4398 Box
4176 4460 Box
4178 4523 Box
6622 644 Box
1.000 UL
LTb
833 4899 N
833 511 L
6157 0 V
0 4388 V
-6157 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
