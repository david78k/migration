#!/bin/bash
cpms=( 4 8 )
scheds=( sf lf )
#scheds=( sf lf rand )
vwnds=( 1 5 )
#vwnds=( 1 5 10 30 )
#rounds=( 3 4 )
#delays=( 20-80-180 )
delays=( 20 80 )
sleeptime=100
#network=dynamic
network=static

basedir=/nfs/vmanage/controller
exe=$basedir/multiplecontroller.py
#exe=$basedir/multiple-without-controller.py

function exp(){
	local sched=$1
	local vwnd=$2
	local delay=$3
	local run=$4
#	exe=$basedir/multiple-without-controller.py
	logfile=$basedir/log/$delay/$sched-$vwnds-r$run

	if [ $network == "dynamic" ]; then
		echo "$basedir/congestor &"
		#$basedir/congestor &
	fi
	
	cmd="logsave $logfile time -p $exe -s $sched -v $vwnd"
	echo $cmd

	$cmd
	#logsave $logfile time -p $exe $sched $vwnds
	
	wait
}

function expssh(){
	local sched=$1
	local vwnd=$2
	local delay=$3
	local run=$4
	host=gr121
	logfile=$basedir/log/$delay/$sched-$vwnds-r$run

	if [ $network == "dynamic" ]; then
		echo "$basedir/congestor &"
		#$basedir/congestor &
	fi
	
	cmd="ssh $host logsave $logfile time -p $exe -s $sched -v $vwnd"
	echo $cmd
	$cmd
	#ssh $host logsave $logfile time -p $exe $cpms $vwnd

	wait
}

for delay in ${delays[@]}
do
	for sched in ${scheds[@]}
	do
		for vwnd in ${vwnds[@]}
		do
			cmd="exp $sched $vwnd $delay"
			cmdssh="expssh $sched $vwnd $delay"
			#cmd="$basedir/exp $cpm $vwnd"
			#cmd="/nfs/vmanage/exp $cpm $vwnd $delay"
		#	if [ $vwnd == 0 ]; then
		#		cmd="/nfs/vmanage/startcontroller $cpm $delay"
		#	fi	

			#echo $cmd
			$cmd 1 
#			$cmd 3 
#			sleep $sleeptime

			#ssh gr121 $cmd 2
			#echo $cmdssh
			$cmdssh 2
#			$cmdssh 4
#			sleep $sleeptime

#			$cmd 3 
			#sleep $sleeptime

			#ssh gr121 $cmd 4
			#ssh gr121 /nfs/vmanage/exp $cpm $vwnd 4 $delay
			#sleep $sleeptime
		done	
	done
done
