#!/bin/bash

name=180ms
##name=20-80-180
#name=20tmt
#name=demo
data=${name}.dat
script=${name}.R
png=${name}.png
emf=${name}.emf
eps=${name}.eps

colors=6

function genplot() {
	cmd="emf($emf)"

	if [ $1 == "png" ]; then
		figure=$png
		cmd="png('$figure')"
	elif [ $1 == "eps" ]; then
		figure=$eps
		cmd="postscript('$figure')"
	elif [ $1 == "emf" ]; then
		figure=$emf
		cmd="emf('$figure')"
	fi

cat >$script << EOF
library(ggplot2)

require(devEMF)
$cmd

#png("$figure")
#postscript("plot.eps")
#emf("plot.emf")

# header = TRUE ignores the first line, check.names = FALSE allows '+' in 'C++'
benchmark <- read.table("$data", header = TRUE, row.names = "vwnd", check.names = FALSE)

# 't()' is matrix tranposition, 'beside = TRUE' separates the benchmarks, 'heat' provides nice colors
barplot(t(as.matrix(benchmark)), beside = TRUE, col = heat.colors($colors))

# 'cex' stands for 'character expansion', 'bty' for 'box type' (we don't want borders)
legend("topright", names(benchmark), cex = 0.9, bty = "n", fill = heat.colors($colors))

EOF

	R CMD BATCH $script
}

genplot png

genplot eps

genplot emf

git add .
git commit -a -m $script
git push
