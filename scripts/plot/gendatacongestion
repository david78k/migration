# generate plot for loss rates
#times=( 50-50-50 )

delays=( 50-50-50 )

cwnds=( 0 1 2 4 6 8 10 12 14 16 18 20 40 )

#sampletimes=( 5 )

run0=5
rounds=( 5 6 )

for delay in ${delays[@]}
do
	webdir=1-1/congestion/$delay
	basedir=/root/log/wansim/$webdir
#	final=$basedir/all.dat

#	for loss in ${losses[@]}
#	do
#		dir=$basedir/$loss
		dir=$basedir
		datfile=$dir/all.dat
		concurall=$dir/concurrency.dat
		tmpconcurall=/tmp/concurall
		tmpconcur=/tmp/concurrency
		outfile=$dir/all.log
		alltotal=$dir/all.total # total migration time
		avgfile=$dir/all.avg # average migration time
		totaldat=$dir/total.dat # total migration time
	
		rm $totaldat
		rm $avgfile
		rm $concurall
		echo -n '' > $concurall

		for cwnd in ${cwnds[@]}
		do
			echo -n "${cwnd}" >> $totaldat
	
			confile=$dir/${cwnd}vms.concur
			echo -n '' > $confile

			for round in ${rounds[@]}
			do
				#0vms-r1m 
				prefix=${cwnd}vms-r${round}
				mlog=$dir/${prefix}.log
				mdat=$dir/${prefix}.dat
				
				#if [ $cwnd -eq 0 ]; then
				#	mlog=$dir/${prefix}.log
				#fi
				
				# concurrency
				/root/log/plot/genplotconcurrency $mlog $webdir				
				/root/shared/merge $confile $mdat > $tmpconcur
				cp $tmpconcur $confile

				# total migration time
				t=`grep real $mlog | tail -1 | awk '{print $2}'`

				echo -n " $t" >> $totaldat

				# calculate average of individual migration times
				avgt=`grep real $mlog | sed '$d' | awk '{print $2}' | awk '{sum+=$1}END{print sum/NR}'`

				if [ $round -eq $run0 ]; then
					echo -n "$cwnd $avgt" >> $avgfile
				else	
					echo " $avgt" >> $avgfile	
				fi
			done	
			echo "" >> $totaldat
		
			# average rounds	
			awk '{print $2,$4}' $tmpconcur | awk 'NF {s=0; for(i=1;i<=NF;i++) s+=$i;printf("%.2f\n", s/(NF))}' > $confile

			#cp $tmpconcur $confile
			
			# merge 
			pr -m -t -s\  $concurall $confile > $tmpconcurall
			cp $tmpconcurall $concurall
		done

		sed -i 's/^ //g' $concurall

		#cat $avgfile
		cp $avgfile /tmp/all.avg

		# average rounds
		awk 'NF {s=0; for(i=2;i<=NF;i++) s+=$i;printf("%.2f\n", s/(NF-1))}' $avgfile > /tmp/all.avg2

		# merge
		pr -m -t -s\  /tmp/all.avg /tmp/all.avg2 | gawk '{print }' > $avgfile

		cat $avgfile

		# average each line
		awk 'NF {s=0; for(i=2;i<=NF;i++) s+=$i;printf("%.2f\n", s/(NF-1))}' $totaldat | /root/shared/merge $totaldat - > $alltotal

		# merge files
		#pr -m -t -s\ $totaldat $alltotal | gawk '{print }' > $datfile
		#sed -i '1i #vms r1 r2 avg' $alltotal
		cat $alltotal
	
		/root/shared/merge $alltotal $avgfile > $datfile
		sed -i '1i #vms r1 r2 total vms r1 r2 avg' $datfile
		cat $datfile
#	done
done


