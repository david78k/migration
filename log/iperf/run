#!/bin/bash
# iperf testing script

server=c11node10
router=c11node28

# RTT (ms), LAN=0.3-0.5ms
# IMPORTANT: RTT should be halved later
RTTs=( 160 ) # 40tcps failed
#RTTs=( 20 60 10 140 160 ) # 30tcp failed
#RTTs=( LAN 2 )
#RTTs=( 2 80 180 )
#RTTs=( LAN 2 5 10 20 80 180 )

# number of parallel TCP connections
Ns=( 1 2 3 4 5 6 7 8 9 10 12 14 16 18 20 30 40 )
#Ns=( 1 2 )
#Ns=( 40 )
#Ns=( 30 40 )
#Ns=( 1 )

# total run time in seconds
totaltime=120

ssh $router service tc stop
ssh $server pkill iperf  
#ssh $server iperf3 -s > server.log &
ssh $server iperf -s > server.log &

sleep 3

for RTT in ${RTTs[@]};
do
	echo RTT = ${RTT}ms
	if [ $RTT != "LAN" ]; then
		# IMPORTANT: RTT should be halved 
		ssh $router service tc delay `expr $RTT / 2`
		#ssh $router service tc delay $RTT
	fi

	logfile=${RTT}ms.log
	rm $logfile

	echo -n "N = $N "
	for N in ${Ns[@]}
	do
		echo -n "$N "
		echo N = $N >> $logfile
		#iperf3 -c $server -P $N -t 30 -O 45 >> $logfile
		iperf -c $server -P $N -t $totaltime >> $logfile
	done
	ssh $router service tc stop
done

# stop iperf
#pgrep -fl iperf| awk '{print $1}' | xargs kill -9
ssh $server "pgrep -fl iperf| awk '{print $1}' | xargs kill -9"

# kill iperf
#kill -9 `ps -ef | grep iperf | awk '{print \$2}'
#ssh $server "kill -9 `ps -ef | grep iperf | awk '{print \$2}'"
